{"version":3,"sources":["configurations/crud.service.ts","modules/users/services/user.service.ts","shared/admin-header/index.tsx","shared/admin-sidebar/index.tsx","shared/admin-layout/index.tsx","modules/admin-home-page/index.tsx","modules/users/components/loginPage/index.tsx","shared/loading/index.tsx","shared/admin-table/index.tsx","shared/services/validation.service.ts","shared/Input/index.js","shared/services/uploadImage.service.ts","shared/image-input/index.tsx","modules/achievements/components/form/index.tsx","modules/achievements/services/achievements.service.ts","modules/achievements/components/section/index.tsx","modules/feedbacks/components/form/index.tsx","modules/feedbacks/services/feedbacks.service.ts","modules/feedbacks/components/section/index.tsx","modules/users/components/userProfile/index.tsx","modules/committees/services/committee.service.ts","modules/users/components/userForm/index.tsx","modules/users/components/usersListPage/index.tsx","modules/announcements/components/form/index.tsx","modules/announcements/services/announcement.service.ts","modules/announcements/components/page/index.tsx","modules/committees/components/committeeForm/index.tsx","configurations/admin-routes.ts","modules/committees/components/committeesListPage/index.tsx","App.tsx","index.tsx"],"names":["instance","axios","create","baseURL","defaults","headers","common","localStorage","getItem","CrudService","_http","url","parentUrl","this","initialize","bind","list","parentId","reqUrl","get","records","data","id","record","item","post","put","delete","UserService","login","logout","cred","response","setItem","JSON","stringify","user","token","removeItem","AdminHeader","props","_userService","logoutUser","then","window","location","href","className","style","marginLeft","isVisible","onClick","toggleSidebar","size","icon","faTimes","faBars","faSignOutAlt","Component","AdminSidebar","renderAdminRoutes","type","parse","adminRoutes","map","adRoute","index","label","adminOnly","key","exact","to","path","left","AdminLayout","state","isSidebarVisible","setState","children","AdminHome","isUserLoggedIn","history","push","LoginPage","code","isLoading","success","error","handleChange","e","currentTarget","name","value","handleSubmit","a","preventDefault","setTimeout","msg","onSubmit","onChange","placeholder","show","title","timeout","onConfirm","warning","Loading","AdminTable","renderTableHeaders","config","tableHeaders","header","scope","toUpperCase","renderTableBody","tableBody","keyHeader","params","actions","includes","renderEditBtn","renderDeleteBtn","triggerEditEvent","data-toggle","data-target","_id","faEdit","deleteRow","faTrash","isEmail","test","isEmpty","length","FormInput","validationMessage","inputTypes","numericTypes","textfulTypes","isNumericType","isTextFulType","isRequired","required","errorPosition","customMessage","role","defaultMessage","validationMessages","errorMessage","validateEmpty","field","validateEmail","matchFieldLength","matchMinValue","min","matchMaxValue","max","matchMinLength","minLength","matchMaxLength","maxLength","hasExceededMaxDate","dateProvided","maxDate","Date","getTime","matchMaxDate","hasExceededMinDate","minDate","matchMinDate","matchTextPattern","regPattern","pattern","RegExp","validateField","input","target","validationCollectedRules","rule","onInput","isAcceptableProp","prop","getAcceptedProps","obj","addClass","classList","add","options","htmlFor","disabled","option","idx","uploadImage","image","fd","FormData","append","process","ImageInput","isImageUploaded","handleImageInputChange","setImageUpload","files","res","secure_url","renderImageUpload","accept","renderImagePreview","src","imgUrl","width","alt","removeImage","prevProps","AchievementForm","achievement","date","description","cover","isImageUploading","status","imageUrl","formatDate","currentDateTime","getFullYear","getMonth","getDate","resetObj","itemToBeEdited","isModalOpened","closeModal","isSubmitting","open","onClose","center","styles","modal","animation","rows","AchievementService","AchievementsList","tableConfig","achievements","successAlert","errorAlert","achievementToBeEdited","isCreateModalOpened","idOfItemToBeDeleted","_achievementService","createAchievement","userId","unshift","catch","err","editAchievement","submit","update","updateStateWithNewAchievement","objectToUpdateIndex","findIndex","splice","removeAchievement","filter","faPlus","Object","keys","showCancel","confirmBtnText","confirmBtnBsStyle","onCancel","focusCancelBtn","FeedbackForm","feedback","body","FeedbackService","FeedbacksList","feedbacks","feedbackToBeEdited","_feedbackService","createFeedback","editFeedback","updateStateWithNewFeedback","removeFeedback","UserProfile","currentTab","switchTabs","tab","match","getById","email","phone","aria-label","CommitteeService","UserForm","committee","committees","_committeeService","generateCode","randomNumber","Math","floor","random","String","generateArrayOfCommitteesNames","committeesArray","committeesNames","faCog","UsersListPage","users","userToBeEdited","createUser","editUser","updateStateWithNewUser","removeUser","AnnouncementForm","announcement","AnnouncementService","AnnouncementsListPage","announcements","announcementToBeEdited","_announcementService","createAnnouncement","editAnnouncement","updateStateWithNewAnnouncement","removeAnnouncement","CommitteeForm","component","committeeToBeEdited","createCommittee","editCommittee","updateStateWithNewCommittee","removeCommittee","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9093a83.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:4000/api\",\n});\n\ninstance.defaults.headers.common[\"x-access-token\"] = localStorage.getItem(\n  \"token\"\n);\n\nexport default class CrudService {\n  _http: typeof axios;\n  url: string;\n  parentUrl?: string;\n\n  constructor() {\n    this._http = instance as typeof axios;\n\n    this.initialize = this.initialize.bind(this);\n    this.list = this.list.bind(this);\n  }\n\n  initialize(url: string, parentUrl = \"\") {\n    this.url = url;\n    this.parentUrl = parentUrl;\n  }\n\n  async list(parentId?: string) {\n    let reqUrl =\n      this.parentUrl || parentId\n        ? `${this.parentUrl + parentId}${this.url}/list`\n        : `${this.url}/list`;\n\n    let { data: records } = await this._http.get(reqUrl);\n    return records;\n  }\n\n  async getById(id: string, parentId?: string) {\n    let reqUrl =\n      this.parentUrl || parentId\n        ? `${this.parentUrl + parentId}${this.url}/${id}`\n        : `${this.url}/${id}`;\n\n    let { data: record } = await this._http.get(reqUrl);\n    return record;\n  }\n\n  async create(item: any, parentId?: string) {\n    let reqUrl =\n      this.parentUrl || parentId\n        ? `${this.parentUrl + parentId}${this.url}/new`\n        : `${this.url}/new`;\n\n    let { data: record } = await this._http.post(reqUrl, item);\n    return record;\n  }\n\n  async update(id: string, item: any) {\n    let reqUrl = this.parentUrl\n      ? `${this.parentUrl}${this.url}/${id}`\n      : `${this.url}/${id}`;\n\n    let { data: record } = await this._http.put(reqUrl, item);\n    return record;\n  }\n\n  async delete(id: string, parentId?: string) {\n    let reqUrl =\n      this.parentUrl || parentId\n        ? `${this.parentUrl + parentId}${this.url}/${id}`\n        : `${this.url}/${id}`;\n\n    let { data } = await this._http.delete(reqUrl);\n    return data;\n  }\n}\n","import CrudService from \"configurations/crud.service\";\n\nexport default class UserService extends CrudService {\n  constructor() {\n    super();\n    this.initialize(\"/users\");\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  async login(cred: { code: string }) {\n    let response = await this._http.post(`${this.url}/login`, cred);\n\n    localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n    localStorage.setItem(\"token\", response.data.token);\n\n    return response;\n  }\n\n  async logout() {\n    let response = await this._http.get(`${this.url}/logout`);\n\n    localStorage.setItem(\"user\", null);\n    localStorage.removeItem(\"token\");\n\n    return response;\n  }\n\n  isUserLoggedIn() {\n    if (localStorage.getItem(\"token\")) return true;\n    else return false;\n  }\n\n  async getById(id: string) {\n    let { data: record } = await this._http.get(`${this.url}/me/${id}`);\n    return record;\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSignOutAlt,\n  faBars,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport UserService from \"modules/users/services/user.service\";\n\nimport \"./style.css\";\n\ninterface Prop {\n  isVisible: boolean;\n  toggleSidebar(event: React.MouseEvent<HTMLButtonElement>): void;\n}                                             \n\nexport default class AdminHeader extends Component<Prop> {\n  public _userService: UserService;\n  constructor(props: Prop) {\n    super(props);\n    this._userService = new UserService();\n  }\n\n  logoutUser: (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => void = () => {\n    this._userService.logout().then(() => {\n      window.location.href = \"/login\";\n    });\n  };\n\n  render() {\n    return (\n      <nav className=\"navbar admin-header navbar-expand-lg\">\n        <button\n          className=\"btn text-muted nav-item d-md-none\"\n          style={{ marginLeft: this.props.isVisible ? \"245px\" : \"0\" }}\n          onClick={this.props.toggleSidebar}\n        >\n          <FontAwesomeIcon\n            size=\"lg\"\n            icon={this.props.isVisible ? faTimes : faBars}\n          />\n        </button>\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <button\n              className=\"btn btn-link text-muted\"\n              onClick={this.logoutUser}\n            >\n              Logout <FontAwesomeIcon icon={faSignOutAlt} />\n            </button>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./style.css\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport { adminRoutes } from \"configurations/admin-routes\";\nimport { RouteStructure } from \"configurations/interfaces/route.interface\";\n\ninterface Prop {\n  isVisible: boolean;\n}\n\nexport default class AdminSidebar extends Component<Prop> {\n  renderAdminRoutes = () => {\n    let { type } = localStorage.getItem(\"user\")\n      ? JSON.parse(localStorage.getItem(\"user\"))\n      : \"\";\n    return adminRoutes.map((adRoute: RouteStructure, index: number) => {\n      if (adRoute.label) {\n        if (type === \"Board\" && !adRoute.adminOnly) {\n          return (\n            <li key={index} className=\"sidebarItem\">\n              <NavLink exact to={adRoute.path}>\n                {adRoute.label}\n              </NavLink>\n            </li>\n          );\n        } else if (type === \"Admin\") {\n          return (\n            <li key={index} className=\"sidebarItem\">\n              <NavLink exact to={adRoute.path}>\n                {adRoute.label}\n              </NavLink>\n            </li>\n          );\n        } else return \"\";\n      } else return \"\";\n    });\n  };\n\n  render() {\n    return (\n      <aside\n        className=\"adminSidebar text-center\"\n        style={{ left: !this.props.isVisible ? \"-245px\" : \"0\" }}\n      >\n        <h1> Admin Dashboard </h1>\n        <ul className=\"list-unstyled mt-2\">{this.renderAdminRoutes()}</ul>\n      </aside>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport AdminHeader from \"../admin-header\";\nimport AdminSidebar from \"../admin-sidebar\";\n\nimport \"./style.css\";\n\ninterface State {\n  isSidebarVisible: boolean;\n}\n\nexport default class AdminLayout extends Component<{ children: React.ReactNode }, State> {\n  state = {\n    isSidebarVisible: true,\n  };\n\n  toggleSidebar: (event: React.MouseEvent<HTMLButtonElement>) => void = () => {\n    this.setState({ isSidebarVisible: !this.state.isSidebarVisible });\n  };\n\n  render() {\n    return (\n      <>\n        <AdminHeader\n          toggleSidebar={this.toggleSidebar}\n          isVisible={this.state.isSidebarVisible}\n        />\n        <main className=\"admin-main\">{this.props.children}</main>\n        <AdminSidebar\n          isVisible={this.state.isSidebarVisible}\n        />\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./style.css\";\n\nimport AdminLayout from \"shared/admin-layout\";\nimport UserService from \"modules/users/services/user.service\";\n\ninterface Prop {\n  history: {\n    push: (path: string) => void;\n  };\n}\n\nexport default class AdminHome extends Component<Prop> {\n  public _userService: UserService;\n  constructor(props: Prop) {\n    super(props);\n    this._userService = new UserService();\n  }\n\n  async componentDidMount() {\n    if (!this._userService.isUserLoggedIn()) this.props.history.push(\"/login\");\n  }\n\n  render() {\n    return (\n      <AdminLayout>\n        <div className=\"admin-home d-flex justify-content-center align-items-center\">\n          <header className=\"admin-home__header text-center\">\n            <h2>Welcome to Dashboard</h2>\n          </header>\n        </div>\n      </AdminLayout>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"modules/users/services/user.service\";\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\nimport \"./style.css\";\n\ninterface State {\n  user: {\n    code: string;\n  };\n  isLoading: boolean;\n  success: string;\n  error: string;\n}\n\ninterface Prop {\n  history: {\n    push: (path: string) => void;\n  };\n}\n\nexport default class LoginPage extends Component<Prop, State> {\n  state = {\n    user: {\n      code: \"\",\n    },\n    isLoading: false,\n    success: \"\",\n    error: \"\",\n  };\n\n  public _userService: UserService;\n  constructor(props: Prop) {\n    super(props);\n    this._userService = new UserService();\n  }\n\n  handleChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    let { name, value } = e.currentTarget;\n\n    let { user } = this.state;\n\n    this.setState({\n      user: {\n        ...user,\n        [name]: value,\n      } as any,\n    });\n  };\n\n  handleSubmit = async (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    let { user } = this.state;\n\n    this.setState({\n      isLoading: true,\n    });\n\n    let response;\n    try {\n      response = await this._userService.login(user);\n      let { type } = response.data.user;\n\n      if (type === \"Member\") {\n        this.setState({\n          isLoading: false,\n          success: null,\n          error: \"You shouldn't be here !\",\n        });\n      } else if (type === \"Admin\") {\n        this.setState({\n          isLoading: false,\n          success: \"Logged in successfully\",\n          error: \"\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/\";\n        }, 2000);\n      } else if (type === \"Board\") {\n        this.setState({\n          isLoading: false,\n          success: \"Logged in successfully\",\n          error: \"\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/users\";\n        }, 2000);\n      }\n    } catch (err) {\n      this.setState({\n        isLoading: false,\n        success: null,\n        error: err.response.data.msg,\n      });\n    }\n  };\n\n  render() {\n    let { isLoading, success, error } = this.state;\n    return (\n      <section className=\"login-page\">\n        <div className=\"login-form-box\">\n          <h1 className=\"text-center h3 mb-5\"> Login to the dashboard </h1>\n          <form className=\"login-form\" onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n              <label>Code</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"code\"\n                onChange={this.handleChange}\n                placeholder=\"Enter your code ..\"\n              />\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">\n              {isLoading ? \"Logging you in ...\" : \"LOGIN\"}\n            </button>\n\n            {success ? (\n              <SweetAlert\n                show={!!success}\n                success\n                title={success || \" \"}\n                timeout={2000}\n                onConfirm={() => this.setState({ success: null })}\n              />\n            ) : error ? (\n              <SweetAlert\n                show={!!error}\n                warning\n                title=\"An error occurred\"\n                timeout={2000}\n                onConfirm={() => this.setState({ error: null })}\n              >\n                {error}\n              </SweetAlert>\n            ) : (\n              \"\"\n            )}\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function Loading() {\n  return (\n    <>\n      <p>loading ... </p>\n    </>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./style.css\";\n\ninterface Prop {\n  config: {\n    tableHeaders: any[];\n    className: string;\n    actions: string[];\n    filters?: ((filter: string) => void)[];\n  };\n  tableBody: any[];\n  triggerEditEvent?: (item: any, submit: boolean, id?: string) => void;\n  deleteRow: (id: string, isToBeSubmitted: boolean) => void;\n}\n\nexport default class AdminTable extends Component<Prop> {\n  renderTableHeaders = () => {\n    let { tableHeaders } = this.props.config;\n\n    return tableHeaders.map((header: any, index) => {\n      if (typeof header === \"object\") {\n        return (\n          <th key={index} scope=\"col\">\n            {header.name.toUpperCase()}\n          </th>\n        );\n      } else {\n        return (\n          <th key={index} scope=\"col\">\n            {header.toUpperCase()}\n          </th>\n        );\n      }\n    });\n  };\n\n  renderTableBody = () => {\n    let { tableBody, config } = this.props;\n    return tableBody.map((item, index) => (\n      <tr key={index}>\n        {this.props.config.tableHeaders.map((keyHeader: any) => {\n          if (typeof keyHeader === \"object\") {\n            return (\n              <td key={keyHeader.name}>\n                <Link\n                  to={`${keyHeader.href}/${\n                    keyHeader.params ? item[keyHeader.params] : \"\"\n                  }`}\n                >\n                  {item[keyHeader.name]}\n                </Link>\n              </td>\n            );\n          } else {\n            return <td key={keyHeader}> {item[keyHeader]} </td>;\n          }\n        })}\n        <td>\n          {config.actions.includes(\"edit\") && this.renderEditBtn(item)}\n          {config.actions.includes(\"delete\") && this.renderDeleteBtn(item)}\n        </td>\n      </tr>\n    ));\n  };\n\n  renderEditBtn = (item: any) => {\n    let { triggerEditEvent } = this.props;\n\n    return (\n      <button\n        className=\"btn btn-secondary mr-2\"\n        data-toggle=\"modal\"\n        data-target=\"#editModal\"\n        title=\"Edit Item\"\n        onClick={() => triggerEditEvent(item, false, item._id)}\n      >\n        <FontAwesomeIcon icon={faEdit} />\n      </button>\n    );\n  };\n\n  renderDeleteBtn = (item: any) => {\n    let { deleteRow } = this.props;\n\n    return (\n      <button\n        className=\"btn btn-danger\"\n        onClick={() => deleteRow(item._id, false)}\n      >\n        <FontAwesomeIcon icon={faTrash} />\n      </button>\n    );\n  };\n\n  render() {\n    let { className } = this.props.config;\n    return (\n      <>\n        <table className={`${className} table`}>\n          <thead>\n            <tr>\n              {this.renderTableHeaders()}\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderTableBody()}</tbody>\n        </table>\n      </>\n    );\n  }\n}\n","export const isEmail = (value: string) =>\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n    value\n  );\n\nexport const isEmpty = (value: string) => value.length === 0;\n","import React, { Component } from \"react\";\nimport { isEmail, isEmpty } from \"../services/validation.service\";\n\nimport \"./style.css\";\n\nexport default class FormInput extends Component {\n  state = {\n    validationMessage: \"\",\n  };\n\n  // get all the input types to add attributes dynamically to the input\n  inputTypes = {\n    numericTypes: [\"number\"],\n    textfulTypes: [\"text\", \"email\", \"password\", \"tel\"],\n  };\n\n  /**\n   * Check if the type provided is a numeric number\n   * it makes the input component accept min & max attributes\n   */\n  isNumericType = () => {\n    return this.inputTypes.numericTypes.includes(this.props.type);\n  };\n\n  /**\n   * Check if the type provided is a textful number\n   * it makes the input component accept minLength & maxLength attributes\n   */\n  isTextFulType = () => {\n    return this.inputTypes.textfulTypes.includes(this.props.type);\n  };\n\n  // check if the field is required\n  isRequired = () => {\n    return this.props.required;\n  };\n\n  // make the error message's position according to the errorPosition prop provided\n  errorPosition = () => {\n    return this.props.errorPosition === \"top\" ? \"order-top\" : \"order-bottom\";\n  };\n\n  /**\n   * View the custom message provided by the user or view a custom message\n   *\n   * @param {string} role\n   * @param {string} defaultMessage\n   */\n  customMessage = (role, defaultMessage) => {\n    let { validationMessages } = this.props;\n    return (validationMessages && validationMessages[role]) || defaultMessage;\n  };\n\n  errorMessage = null;\n\n  validateEmpty = (field) => {\n    // validate required input\n    // check if the input is not empty\n    if (this.isRequired() && isEmpty(field.value)) {\n      // he didn't access this body\n      this.errorMessage = this.customMessage(\n        \"empty\",\n        \"This field is Required!\"\n      );\n    }\n  };\n\n  validateEmail = (field) => {\n    // check if the input value a valid email address\n    // validate the email when the validation.errorMessage is null\n    if (\n      this.props.type === \"email\" &&\n      this.state.validationMessage === null &&\n      isEmpty(field.value) &&\n      !isEmail(field.value)\n    ) {\n      this.errorMessage = this.customMessage(\"email\", \"Invalid Email Address\");\n    }\n  };\n\n  matchFieldLength = (field) => {\n    let { length } = this.props;\n\n    // check if the value equals the length specified\n    if (!isEmpty(field.value) && length && field.value.length !== length) {\n      this.errorMessage = this.customMessage(\n        \"lengthMessage\",\n        `This field should be ${length} in length`\n      );\n    }\n  };\n\n  matchMinValue = (field) => {\n    let { min } = this.props;\n    if (this.isNumericType() && min && field.value < min) {\n      this.errorMessage = this.customMessage(\n        \"minValueMessage\",\n        `The minimum value accepted is ${min}`\n      );\n    }\n  };\n\n  matchMaxValue = (field) => {\n    let { max } = this.props;\n    if (this.isNumericType() && max && field.value > max) {\n      this.errorMessage = this.customMessage(\n        \"maxValueMessage\",\n        `The maximum value accepted is ${max}`\n      );\n    }\n  };\n\n  matchMinLength = (field) => {\n    let { minLength } = this.props;\n    if (this.isTextFulType() && minLength && field.value.length < minLength) {\n      this.errorMessage = this.customMessage(\n        \"minLengthMessage\",\n        `The field should be at minimum ${minLength} characters `\n      );\n    }\n  };\n\n  matchMaxLength = (field) => {\n    let { maxLength } = this.props;\n    if (this.isTextFulType() && !!maxLength && field.value.length > maxLength) {\n      this.errorMessage = this.customMessage(\n        \"maxLengthMessage\",\n        `The field should be maximum ${maxLength} characters `\n      );\n    }\n  };\n\n  hasExceededMaxDate = (dateProvided, maxDate) => {\n    return new Date(dateProvided).getTime() > new Date(maxDate).getTime();\n  };\n\n  matchMaxDate = (field) => {\n    let { maxDate } = this.props;\n\n    if (\n      this.isNumericType() &&\n      !!maxDate &&\n      this.hasExceededMaxDate(field.value, maxDate)\n    ) {\n      this.errorMessage = this.customMessage(\n        \"maxDateMessage\",\n        `The Date should be maximum ${maxDate}`\n      );\n    }\n  };\n\n  hasExceededMinDate = (dateProvided, minDate) => {\n    return new Date(dateProvided).getTime() < new Date(minDate).getTime();\n  };\n\n  matchMinDate = (field) => {\n    let { minDate } = this.props;\n\n    if (\n      this.isNumericType() &&\n      !!minDate &&\n      this.hasExceededMinDate(field.value, minDate)\n    ) {\n      this.errorMessage = this.customMessage(\n        \"maxDateMessage\",\n        `The Date should be minimum ${minDate}`\n      );\n    }\n  };\n\n  matchTextPattern = (field) => {\n    let { type, regPattern } = this.props,\n      pattern = new RegExp(`${regPattern}`, \"g\");\n\n    if (type === \"text\" && regPattern && !pattern.test(field.value)) {\n      this.errorMessage = this.customMessage(\n        \"matchPattern\",\n        `The string should match pattern provided`\n      );\n    }\n  };\n\n  // validate the field according to its type\n  validateField = (e) => {\n    let input = e.target,\n      validationCollectedRules = [\n        this.validateEmpty,\n        this.validateEmail,\n        this.matchFieldLength,\n        this.matchMinValue,\n        this.matchMinValue,\n        this.matchMaxLength,\n        this.matchMinLength,\n        this.matchMaxDate,\n        this.matchMinDate,\n        this.matchTextPattern,\n      ];\n\n    this.errorMessage = null;\n\n    // validate according to the rules provided\n    for (let rule of validationCollectedRules) {\n      rule(input);\n      if (this.errorMessage) break;\n    }\n\n    this.setState({\n      validationMessage: this.errorMessage,\n    });\n\n    if (this.props.onInput) {\n      this.props.onInput(e);\n    }\n  };\n\n  isAcceptableProp = (prop) => {\n    let acceptableProps = [\n      \"type\",\n      \"required\",\n      \"minLength\",\n      \"maxLength\",\n      \"length\",\n      \"min\",\n      \"validationMessages\",\n      \"errorPosition\",\n      \"minDate\",\n      \"maxDate\",\n      \"regPattern\",\n      \"options\",\n    ];\n    return typeof prop !== \"object\" && !acceptableProps.includes(prop);\n  };\n\n  getAcceptedProps = () => {\n    let obj = {};\n\n    for (let prop in this.props) {\n      if (\n        typeof this.props[prop] === \"function\" ||\n        this.isAcceptableProp(prop)\n      ) {\n        obj[prop] = this.props[prop];\n      }\n    }\n\n    return obj;\n  };\n\n  addClass = (e) => {\n    if (this.props.className) {\n      e.target.classList.add(this.props.className);\n    }\n  };\n\n  render() {\n    let { type, options, className, label, id, value } = this.props;\n\n    return (\n      <section className=\"input-wrapper\">\n        {this.state.validationMessage !== null && (\n          <span className={`error ${this.errorPosition()} text-red`}>\n            {this.state.validationMessage}\n          </span>\n        )}\n\n        {label && <label htmlFor={id}> {label} </label>}\n\n        {type === \"select\" ? (\n          <select onChange={this.validateField} {...this.getAcceptedProps()}>\n            <option value=\"\" disabled>\n              Choose {label}\n            </option>\n            {options &&\n              options.map((option, idx) => (\n                <option value={option} key={idx}>\n                  {\" \"}\n                  {option}{\" \"}\n                </option>\n              ))}\n          </select>\n        ) : type === \"textarea\" ? (\n          <textarea\n            {...this.getAcceptedProps()}\n            className={`form-control ${className}`}\n            onInput={this.validateField}\n          ></textarea>\n        ) : (\n          <input\n            {...this.getAcceptedProps()}\n            type={\n              type === \"int\" || type === \"float\" || type === \"number\"\n                ? \"number\"\n                : type\n            }\n            className={`form-control ${className}`}\n            onInput={this.validateField}\n            value={value || \"\"}\n          />\n        )}\n      </section>\n    );\n  }\n}\n","import axios from \"axios\";\n\nexport let uploadImage = (image: Blob | null) => {\n  let url = \"https://api.cloudinary.com/v1_1/dykflps8g/image/upload\";\n  let fd = new FormData();\n  fd.append(\"file\", image as Blob);\n  fd.append(\"api_key\", 293517195754478 as any);\n  fd.append(\"upload_preset\", \"z1ti5v7g\");\n  fd.append(\n    \"api_secret\",\n    process.env.REACT_APP_CLOUDINARY_SECRET_API_KEY as string\n  );\n\n  return axios.post(url, fd);\n};\n","import React, { Component } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { uploadImage } from \"shared/services/uploadImage.service\";\n\ninterface Prop {\n  setImageUpload: (status: boolean, imageUrl?: string) => void;\n  imgUrl: string;\n  name?: string;\n}\n\ninterface State {\n  isImageUploaded: boolean;\n  image: string;\n}\n\nexport default class ImageInput extends Component<Prop, State> {\n  state = {\n    isImageUploaded: false,\n    image: \"\",\n  };\n\n  handleImageInputChange = (e: React.FormEvent<HTMLInputElement>) => {\n    let { setImageUpload } = this.props;\n    let { files } = e.currentTarget;\n\n    setImageUpload(true);\n    uploadImage(files && files[0]).then((res) => {\n      this.setState({\n        isImageUploaded: true,\n        image: res.data.secure_url,\n      });\n\n      setImageUpload(false, res.data.secure_url);\n    });\n  };\n\n  renderImageUpload = () => (\n    <div className=\"form-group\">\n      <label htmlFor=\"cover\">Upload Image</label>\n      <input\n        type=\"file\"\n        onChange={this.handleImageInputChange}\n        className=\"form-control-file\"\n        id=\"cover\"\n        accept=\"image/*\"\n        name={this.props.name || \"cover\"}\n      />\n    </div>\n  );\n\n  renderImagePreview = () => (\n    <section className=\"img-preview\">\n      <img\n        src={this.state.image || this.props.imgUrl}\n        className=\"d-block\"\n        width=\"100%\"\n        alt=\"Preview\"\n      />\n      <span onClick={this.removeImage} className=\"preview-dismiss\">\n        <FontAwesomeIcon icon={faTimes} />\n      </span>\n    </section>\n  );\n\n  removeImage = () => {\n    this.setState({ isImageUploaded: false, image: \"\" });\n  };\n\n  componentDidUpdate(prevProps: any) {\n    if (\n      this.props.imgUrl !== this.state.image &&\n      this.props.imgUrl !== prevProps.imgUrl\n    ) {\n      this.setState({ image: this.props.imgUrl });\n    }\n  }\n\n  render() {\n    let { isImageUploaded, image } = this.state;\n    return (\n      <>\n        {!isImageUploaded && !image\n          ? this.renderImageUpload()\n          : this.renderImagePreview()}\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\n\nimport Loading from \"shared/loading\";\nimport FormInput from \"shared/Input\"\nimport ImageInput from \"shared/image-input\";\nimport { Achievement } from \"configurations/interfaces/achievement.interface\";\n\ninterface Prop {\n  isModalOpened: boolean;\n  onSubmit: (item: any, submit: boolean, id?: string) => Promise<void>;\n  closeModal: () => void;\n  itemToBeEdited?: any;\n  isSubmitting?: boolean;\n}\n\ninterface State {\n  achievement: Achievement;\n  isLoading: boolean;\n  isImageUploading: boolean;\n}\n\nexport default class AchievementForm extends Component<Prop, State> {\n  state = {\n    achievement: {\n      title: \"\",\n      date: \"\",\n      description: \"\",\n      cover: \"\"\n    },\n    isLoading: false,\n    isImageUploading: false,\n  };\n\n  componentDidMount() {\n    let { itemToBeEdited } = this.props;\n\n    if (itemToBeEdited) {\n      itemToBeEdited.date = this.formatDate();\n      this.setState({ achievement: itemToBeEdited });\n    }\n  }\n\n  setImageUpload = (status: boolean, imageUrl?: string) => {\n    this.setState({ isImageUploading: status });\n    if (imageUrl)\n      this.setState({\n        achievement: { ...this.state.achievement, cover: imageUrl } as any,\n      });\n  };\n\n  formatDate = () => {\n    let currentDateTime = new Date();\n    let formattedDate =\n      currentDateTime.getFullYear() +\n      \"-\" +\n      (currentDateTime.getMonth() + 1) +\n      \"-\" +\n      currentDateTime.getDate();\n\n    return formattedDate;\n  };\n\n  handleChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    let { name, value } = e.currentTarget;\n\n    this.setState({\n      achievement: {\n        ...this.state.achievement,\n        [name]: value,\n      } as any,\n    });\n  };\n\n  handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    let { achievement } = this.state;\n\n    this.setState(\n      {\n        achievement: {\n          ...achievement,\n          date: this.formatDate(),\n        } as any,\n      },\n      () => {\n        this.props.onSubmit(this.state.achievement, true).then(() => {\n          this.setState({ achievement: achievement });\n          this.resetObj(achievement);\n        });\n      }\n    );\n  };\n\n  resetObj(obj: any) {\n    for (let prop in obj) {\n      obj[prop] = \"\";\n    }\n  }\n\n  render() {\n    let {\n      isModalOpened,\n      itemToBeEdited,\n      closeModal,\n      isSubmitting,\n    } = this.props;\n    let { achievement, isLoading, isImageUploading } = this.state;\n\n    return (\n      <Modal\n        open={isModalOpened}\n        onClose={() => closeModal()}\n        center\n        styles={{\n          modal: {\n            animation: `${\n              isModalOpened ? \"customEnterAnimation\" : \"customLeaveAnimation\"\n            } 500ms`,\n          },\n        }}\n      >\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <>\n            <h3 className=\"mb-3\"> Achievement </h3>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"row\">\n                <div className=\"form-group col-md-12\">\n                  <FormInput\n                    type=\"text\"\n                    required={true}\n                    placeholder=\"achievement title\"\n                    label=\"Title\"\n                    id=\"title\"\n                    name=\"title\"\n                    errorPosition=\"bottom\"\n                    value={achievement.title}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"form-group col-12\">\n                  <FormInput\n                    type=\"textarea\"\n                    required={true}\n                    label=\"description\"\n                    id=\"description\"\n                    name=\"description\"\n                    rows=\"5\"\n                    errorPosition=\"bottom\"\n                    value={achievement.description}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <ImageInput\n                imgUrl={achievement.cover}\n                setImageUpload={this.setImageUpload}\n              />\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={isSubmitting || isImageUploading}\n              >\n                {isImageUploading\n                  ? \"Uploading...\"\n                  : isSubmitting\n                  ? \"Loading ...\"\n                  : itemToBeEdited\n                  ? \"Save\"\n                  : \"Create\"}\n              </button>\n            </form>\n          </>\n        )}\n      </Modal>\n    );\n  }\n}\n","import CrudService from \"configurations/crud.service\";\n\nexport default class AchievementService extends CrudService {\n  parentUrl: string;\n\n  constructor() {\n    super();\n    this.initialize(\"/achievements\", \"users/\");\n  }\n}\n","import React, { Component } from \"react\";\n\nimport AdminTable from \"shared/admin-table\";\nimport Loading from \"shared/loading\";\nimport AchievementForm from \"../form\";\n\nimport AchievementService from \"modules/achievements/services/achievements.service\";\nimport { Achievement } from \"configurations/interfaces/achievement.interface\";\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Prop {\n  userId: string;\n  achievements: Achievement[];\n}\n\ninterface State {\n  achievements: Achievement[];\n  achievementToBeEdited?: Achievement | null;\n  successAlert: string;\n  errorAlert: string;\n  isLoading: boolean;\n  isCreateModalOpened: boolean;\n  isSubmitting: boolean;\n  idOfItemToBeDeleted: string;\n}\n\nexport default class AchievementsList extends Component<Prop, State> {\n  tableConfig = {\n    tableHeaders: [\"title\"],\n    className: \"table-striped\",\n    actions: [\"edit\", \"delete\"],\n  };\n\n  state = {\n    achievements: this.props.achievements,\n    successAlert: \"\",\n    errorAlert: \"\",\n    achievementToBeEdited: {} as Achievement,\n    isLoading: false,\n    isCreateModalOpened: false,\n    isSubmitting: false,\n    idOfItemToBeDeleted: \"\",\n  };\n\n  public _achievementService: AchievementService;\n\n  constructor(props: Prop) {\n    super(props);\n    this._achievementService = new AchievementService();\n  }\n\n  createAchievement = (achievement: Achievement) => {\n    let { achievements } = this.state;\n\n    this.setState({\n      isSubmitting: true,\n    });\n\n    return this._achievementService\n      .create(achievement, this.props.userId)\n      .then((response) => {\n        achievements.unshift(response as never);\n\n        this.setState({\n          achievements,\n          successAlert: \"Achievement added successfully\",\n          errorAlert: \"\",\n          isCreateModalOpened: false,\n          isSubmitting: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          errorAlert: \"An error occurred\",\n          successAlert: \"\",\n          isSubmitting: false,\n        });\n      });\n  };\n\n  editAchievement = (\n    achievement: Achievement,\n    submit: boolean,\n    id = this.state.achievementToBeEdited._id\n  ) => {\n    if (submit) {\n      this.setState({\n        isSubmitting: true,\n      });\n      return this._achievementService\n        .update(id, achievement)\n        .then((response) => {\n          this.updateStateWithNewAchievement(response);\n          this.setState({\n            isSubmitting: false,\n            successAlert: \"Achievement updated successfully\",\n            errorAlert: \"\",\n            achievementToBeEdited: {} as Achievement,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            errorAlert: err.response.data.msg,\n          });\n        });\n    } else {\n      this.setState({\n        isSubmitting: false,\n        achievementToBeEdited: achievement,\n      });\n    }\n  };\n\n  updateStateWithNewAchievement = (achievement: Achievement) => {\n    let { achievements } = this.state;\n    let objectToUpdateIndex: number = achievements.findIndex(\n      (item: Achievement) => item._id === achievement._id\n    );\n\n    achievements.splice(objectToUpdateIndex, 1, achievement as never);\n\n    this.setState({ achievements });\n  };\n\n  removeAchievement = (id: string, submit?: boolean) => {\n    let { achievements } = this.state;\n\n    if (submit) {\n      this._achievementService.delete(id, this.props.userId).then(() => {\n        this.setState({\n          achievements: achievements.filter(\n            (item: Achievement) => item._id !== id\n          ),\n        });\n      });\n    } else {\n      this.setState({\n        idOfItemToBeDeleted: id,\n      });\n    }\n  };\n\n  render() {\n    let {\n      achievements,\n      successAlert,\n      errorAlert,\n      achievementToBeEdited,\n      idOfItemToBeDeleted,\n      isLoading,\n      isCreateModalOpened,\n      isSubmitting,\n    } = this.state;\n\n    return (\n      <>\n        <header className=\"d-flex justify-content-between container mt-5\">\n          <h3> Achievements </h3>\n          <button\n            className=\"btn btn-success\"\n            onClick={() => this.setState({ isCreateModalOpened: true })}\n          >\n            <FontAwesomeIcon icon={faPlus} /> Create New Achievement\n          </button>\n        </header>\n        {isLoading ? (\n          <div className=\"text-center mt-5\">\n            <Loading />\n          </div>\n        ) : achievements && achievements.length > 0 ? (\n          <div className=\"container mt-5\">\n            <AdminTable\n              config={this.tableConfig}\n              triggerEditEvent={this.editAchievement}\n              deleteRow={this.removeAchievement}\n              tableBody={achievements as any}\n            />\n          </div>\n        ) : (\n          <div className=\"text-center my-5\">\n            <p>No Achievements yet</p>\n          </div>\n        )}\n\n        {Object.keys(achievementToBeEdited).length > 1 && (\n          <AchievementForm\n            isModalOpened={Object.keys(achievementToBeEdited).length > 1}\n            itemToBeEdited={achievementToBeEdited}\n            onSubmit={this.editAchievement}\n            isSubmitting={isSubmitting}\n            closeModal={() =>\n              this.setState({ achievementToBeEdited: {} as Achievement })\n            }\n          />\n        )}\n\n        <AchievementForm\n          isModalOpened={isCreateModalOpened}\n          isSubmitting={isSubmitting}\n          onSubmit={this.createAchievement}\n          closeModal={() => this.setState({ isCreateModalOpened: false })}\n        />\n\n        <SweetAlert\n          show={!!successAlert}\n          success\n          title={successAlert || \" \"}\n          timeout={2000}\n          onConfirm={() => this.setState({ successAlert: null })}\n        />\n\n        <SweetAlert\n          show={!!errorAlert}\n          warning\n          title=\"An error occurred\"\n          timeout={2000}\n          onConfirm={() => this.setState({ errorAlert: null })}\n        >\n          {errorAlert}\n        </SweetAlert>\n\n        <SweetAlert\n          warning\n          showCancel\n          confirmBtnText=\"Yes, delete it!\"\n          confirmBtnBsStyle=\"danger\"\n          title=\"Are you sure?\"\n          onConfirm={() => {\n            this.removeAchievement(idOfItemToBeDeleted, true);\n            this.setState({ idOfItemToBeDeleted: \"\" });\n          }}\n          onCancel={() => this.setState({ idOfItemToBeDeleted: \"\" })}\n          focusCancelBtn\n          show={!!idOfItemToBeDeleted}\n        >\n          You will not be able to recover this item !\n        </SweetAlert>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\n\nimport Loading from \"shared/loading\";\nimport FormInput from \"shared/Input\";\nimport { Feedback } from \"configurations/interfaces/feedback.interface\";\n\ninterface Prop {\n  isModalOpened: boolean;\n  onSubmit: (item: any, submit: boolean, id?: string) => Promise<void>;\n  closeModal: () => void;\n  itemToBeEdited?: any;\n  isSubmitting?: boolean;\n}\n\ninterface State {\n  feedback: Feedback;\n  isLoading: boolean;\n}\n\nexport default class FeedbackForm extends Component<Prop, State> {\n  state = {\n    feedback: {\n      title: \"\",\n      body: \"\",\n      date: \"\",\n    },\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    let { itemToBeEdited } = this.props;\n\n    if (itemToBeEdited) {\n      itemToBeEdited.date = this.formatDate();\n      this.setState({ feedback: itemToBeEdited });\n    }\n  }\n\n  formatDate = () => {\n    let currentDateTime = new Date();\n    let formattedDate =\n      currentDateTime.getFullYear() +\n      \"-\" +\n      (currentDateTime.getMonth() + 1) +\n      \"-\" +\n      currentDateTime.getDate();\n\n    return formattedDate;\n  };\n\n  handleChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    let { name, value } = e.currentTarget;\n\n    this.setState({\n      feedback: {\n        ...this.state.feedback,\n        [name]: value,\n      } as any,\n    });\n  };\n\n  handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    let { feedback } = this.state;\n\n    this.setState(\n      {\n        feedback: {\n          ...feedback,\n          date: this.formatDate(),\n        } as any,\n      },\n      () => {\n        this.props.onSubmit(this.state.feedback, true).then(() => {\n          this.setState({ feedback: feedback });\n          this.resetObj(feedback);\n        });\n      }\n    );\n  };\n\n  resetObj(obj: any) {\n    for (let prop in obj) {\n      obj[prop] = \"\";\n    }\n  }\n\n  render() {\n    let {\n      isModalOpened,\n      itemToBeEdited,\n      closeModal,\n      isSubmitting,\n    } = this.props;\n    let { feedback, isLoading } = this.state;\n\n    return (\n      <Modal\n        open={isModalOpened}\n        onClose={() => closeModal()}\n        center\n        styles={{\n          modal: {\n            animation: `${\n              isModalOpened ? \"customEnterAnimation\" : \"customLeaveAnimation\"\n            } 500ms`,\n          },\n        }}\n      >\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <>\n            <h3 className=\"mb-3\"> Feedback </h3>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"row\">\n                <div className=\"form-group col-md-12\">\n                  <FormInput\n                    type=\"text\"\n                    required={true}\n                    placeholder=\"feedback title\"\n                    label=\"Title\"\n                    id=\"title\"\n                    name=\"title\"\n                    errorPosition=\"bottom\"\n                    value={feedback.title}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"form-group col-12\">\n                  <FormInput\n                    type=\"textarea\"\n                    required={true}\n                    label=\"body\"\n                    id=\"body\"\n                    name=\"body\"\n                    rows=\"5\"\n                    errorPosition=\"bottom\"\n                    value={feedback.body}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting\n                  ? \"Loading ...\"\n                  : itemToBeEdited\n                  ? \"Save\"\n                  : \"Create\"}\n              </button>\n            </form>\n          </>\n        )}\n      </Modal>\n    );\n  }\n}\n","import CrudService from \"configurations/crud.service\";\n\nexport default class FeedbackService extends CrudService {\n  parentUrl: string;\n\n  constructor() {\n    super();\n    this.initialize(\"/feedbacks\", \"users/\");\n  }\n}\n","import React, { Component } from \"react\";\n\nimport AdminTable from \"shared/admin-table\";\nimport Loading from \"shared/loading\";\nimport FeedbackForm from \"../form\";\n\nimport FeedbackService from \"modules/feedbacks/services/feedbacks.service\";\nimport { Feedback } from \"configurations/interfaces/feedback.interface\";\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Prop {\n  feedbacks: Feedback[];\n  userId: string;\n}\n\ninterface State {\n  feedbacks: Feedback[];\n  feedbackToBeEdited?: Feedback | null;\n  successAlert: string;\n  errorAlert: string;\n  isLoading: boolean;\n  isCreateModalOpened: boolean;\n  isSubmitting: boolean;\n  idOfItemToBeDeleted: string;\n}\n\nexport default class FeedbacksList extends Component<Prop, State> {\n  tableConfig = {\n    tableHeaders: [\"title\"],\n    className: \"table-striped\",\n    actions: [\"edit\", \"delete\"],\n  };\n\n  state = {\n    feedbacks: this.props.feedbacks,\n    successAlert: \"\",\n    errorAlert: \"\",\n    feedbackToBeEdited: {} as Feedback,\n    isLoading: false,\n    isCreateModalOpened: false,\n    isSubmitting: false,\n    idOfItemToBeDeleted: \"\",\n  };\n\n  public _feedbackService: FeedbackService;\n\n  constructor(props: Prop) {\n    super(props);\n    this._feedbackService = new FeedbackService();\n  }\n\n  createFeedback = (feedback: Feedback) => {\n    let { feedbacks } = this.state;\n\n    this.setState({\n      isSubmitting: true,\n    });\n\n    return this._feedbackService\n      .create(feedback, this.props.userId)\n      .then((response) => {\n        feedbacks.unshift(response as never);\n\n        this.setState({\n          feedbacks,\n          successAlert: \"Feedback added successfully\",\n          errorAlert: \"\",\n          isCreateModalOpened: false,\n          isSubmitting: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          errorAlert: \"An error occurred\",\n          successAlert: \"\",\n          isSubmitting: false,\n        });\n      });\n  };\n\n  editFeedback = (\n    feedback: Feedback,\n    submit: boolean,\n    id = this.state.feedbackToBeEdited._id\n  ) => {\n    if (submit) {\n      this.setState({\n        isSubmitting: true,\n      });\n      return this._feedbackService\n        .update(id, feedback)\n        .then((response) => {\n          this.updateStateWithNewFeedback(response);\n          this.setState({\n            isSubmitting: false,\n            successAlert: \"Feedback updated successfully\",\n            errorAlert: \"\",\n            feedbackToBeEdited: {} as Feedback,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            errorAlert: err.response.data.msg,\n          });\n        });\n    } else {\n      this.setState({\n        isSubmitting: false,\n        feedbackToBeEdited: feedback,\n      });\n    }\n  };\n\n  updateStateWithNewFeedback = (feedback: Feedback) => {\n    let { feedbacks } = this.state;\n    let objectToUpdateIndex: number = feedbacks.findIndex(\n      (item: Feedback) => item._id === feedback._id\n    );\n\n    feedbacks.splice(objectToUpdateIndex, 1, feedback as never);\n\n    this.setState({ feedbacks });\n  };\n\n  removeFeedback = (id: string, submit?: boolean) => {\n    let { feedbacks } = this.state;\n\n    if (submit) {\n      this._feedbackService.delete(id, this.props.userId).then(() => {\n        this.setState({\n          feedbacks: feedbacks.filter((item: Feedback) => item._id !== id),\n        });\n      });\n    } else {\n      this.setState({\n        idOfItemToBeDeleted: id,\n      });\n    }\n  };\n\n  render() {\n    let {\n      feedbacks,\n      successAlert,\n      errorAlert,\n      feedbackToBeEdited,\n      idOfItemToBeDeleted,\n      isLoading,\n      isCreateModalOpened,\n      isSubmitting,\n    } = this.state;\n\n    return (\n      <>\n        <header className=\"d-flex justify-content-between container mt-5\">\n          <h3> Feedbacks </h3>\n          <button\n            className=\"btn btn-success\"\n            onClick={() => this.setState({ isCreateModalOpened: true })}\n          >\n            <FontAwesomeIcon icon={faPlus} /> Create New Feedback\n          </button>\n        </header>\n        {isLoading ? (\n          <div className=\"text-center mt-5\">\n            <Loading />\n          </div>\n        ) : feedbacks && feedbacks.length > 0 ? (\n          <div className=\"container mt-5\">\n            <AdminTable\n              config={this.tableConfig}\n              triggerEditEvent={this.editFeedback}\n              deleteRow={this.removeFeedback}\n              tableBody={feedbacks as any}\n            />\n          </div>\n        ) : (\n          <div className=\"text-center my-5\">\n            <p>No Feedbacks yet</p>\n          </div>\n        )}\n\n        {Object.keys(feedbackToBeEdited).length > 1 && (\n          <FeedbackForm\n            isModalOpened={Object.keys(feedbackToBeEdited).length > 1}\n            itemToBeEdited={feedbackToBeEdited}\n            onSubmit={this.editFeedback}\n            isSubmitting={isSubmitting}\n            closeModal={() =>\n              this.setState({ feedbackToBeEdited: {} as Feedback })\n            }\n          />\n        )}\n\n        <FeedbackForm\n          isModalOpened={isCreateModalOpened}\n          isSubmitting={isSubmitting}\n          onSubmit={this.createFeedback}\n          closeModal={() => this.setState({ isCreateModalOpened: false })}\n        />\n\n        <SweetAlert\n          show={!!successAlert}\n          success\n          title={successAlert || \" \"}\n          timeout={2000}\n          onConfirm={() => this.setState({ successAlert: null })}\n        />\n\n        <SweetAlert\n          show={!!errorAlert}\n          warning\n          title=\"An error occurred\"\n          timeout={2000}\n          onConfirm={() => this.setState({ errorAlert: null })}\n        >\n          {errorAlert}\n        </SweetAlert>\n\n        <SweetAlert\n          warning\n          showCancel\n          confirmBtnText=\"Yes, delete it!\"\n          confirmBtnBsStyle=\"danger\"\n          title=\"Are you sure?\"\n          onConfirm={() => {\n            this.removeFeedback(idOfItemToBeDeleted, true);\n            this.setState({ idOfItemToBeDeleted: \"\" });\n          }}\n          onCancel={() => this.setState({ idOfItemToBeDeleted: \"\" })}\n          focusCancelBtn\n          show={!!idOfItemToBeDeleted}\n        >\n          You will not be able to recover this item !\n        </SweetAlert>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport AdminLayout from \"shared/admin-layout\";\nimport Loading from \"shared/loading\";\n\nimport UserService from \"modules/users/services/user.service\";\nimport { User } from \"configurations/interfaces/user.interface\";\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\nimport AchievementsList from \"modules/achievements/components/section\";\nimport FeedbacksList from \"modules/feedbacks/components/section\";\n\nimport \"./style.css\";\n\ninterface Prop {\n  history: {\n    push: (path: string) => void;\n  };\n  match: {\n    params: {\n      id: string;\n    };\n  };\n}\n\ninterface State {\n  user: User;\n  errorAlert: string;\n  isLoading: boolean;\n  currentTab: string;\n}\n\nexport default class UserProfile extends Component<Prop, State> {\n  state = {\n    user: {} as User,\n    currentTab: \"achievements\",\n    errorAlert: \"\",\n    isLoading: false,\n  };\n\n  public _userService: UserService;\n  constructor(props: Prop) {\n    super(props);\n    this._userService = new UserService();\n  }\n\n  async componentDidMount() {\n    if (!this._userService.isUserLoggedIn())\n      return this.props.history.push(\"/login\");\n    this.setState({ isLoading: true });\n    try {\n      let id = this.props.match.params.id;\n      let user = await this._userService.getById(id);\n\n      this.setState({ user, isLoading: false });\n    } catch {\n      this.setState({ errorAlert: \"User not found\", isLoading: false });\n      setTimeout(() => this.props.history.push(\"/users\"), 1000);\n    }\n  }\n\n  switchTabs = (tab: string): void => {\n    this.setState({ currentTab: tab });\n  };\n\n  render() {\n    let { errorAlert, isLoading, currentTab } = this.state;\n    let {\n      name,\n      email,\n      phone,\n      image,\n      achievements,\n      feedbacks,\n    } = this.state.user;\n\n    let { id } = this.props.match.params;\n\n    return (\n      <AdminLayout>\n        {isLoading ? (\n          <div className=\"text-center mt-5\">\n            <Loading />\n          </div>\n        ) : (\n          <>\n            <header className=\"d-flex align-items-center container mt-5 profile__header\">\n              <img src={image} alt=\"\" width=\"200\" />\n              <h2 className=\"mt-3\"> {name} </h2>\n              <p> {email} </p>\n              <p> {phone} </p>\n            </header>\n\n            <section className=\"profile__data mt-5\">\n              <aside className=\"profile__controls\">\n                <div\n                  className=\"btn-group\"\n                  role=\"group\"\n                  aria-label=\"Basic example\"\n                >\n                  <button\n                    className={`btn btn-lg ${\n                      currentTab === \"achievements\" && \"btn-active\"\n                    }`}\n                    onClick={() => this.switchTabs(\"achievements\")}\n                  >\n                    Achievements\n                  </button>\n                  <button\n                    className={`btn btn-lg ${\n                      currentTab === \"feedbacks\" && \"btn-active\"\n                    }`}\n                    onClick={() => this.switchTabs(\"feedbacks\")}\n                  >\n                    Feedbacks\n                  </button>\n                </div>\n              </aside>\n\n              <main className=\"profile__content p-2\">\n                <div className=\"container\">\n                  {currentTab === \"achievements\" ? (\n                    <section className=\"achievements-data\">\n                      <AchievementsList\n                        userId={id}\n                        achievements={achievements}\n                      />\n                    </section>\n                  ) : (\n                    <section className=\"feedbacks-data\">\n                      <FeedbacksList userId={id} feedbacks={feedbacks} />\n                    </section>\n                  )}\n                </div>\n              </main>\n            </section>\n          </>\n        )}\n\n        <SweetAlert\n          show={!!errorAlert}\n          warning\n          title=\"An error occurred\"\n          timeout={2000}\n          onConfirm={() => this.setState({ errorAlert: null })}\n        >\n          {errorAlert}\n        </SweetAlert>\n      </AdminLayout>\n    );\n  }\n}\n","import CrudService from \"configurations/crud.service\";\n\nexport default class CommitteeService extends CrudService {\n  constructor() {\n    super();\n    this.initialize(\"/committees\");\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { User } from \"configurations/interfaces/user.interface\";\nimport Loading from \"shared/loading\";\nimport FormInput from \"shared/Input\";\nimport ImageInput from \"shared/image-input\";\nimport CommitteeService from \"modules/committees/services/committee.service\";\nimport { Committee } from \"configurations/interfaces/committee.interface\";\n\ninterface Prop {\n  isModalOpened: boolean;\n  onSubmit: (item: any, submit: boolean, id?: string) => Promise<void>;\n  closeModal: () => void;\n  itemToBeEdited?: any;\n  isSubmitting?: boolean;\n}\n\ninterface State {\n  user: User;\n  isLoading: boolean;\n  isImageUploading: boolean;\n  committees: string[];\n}\n\nexport default class UserForm extends Component<Prop, State> {\n  state = {\n    user: {\n      name: \"\",\n      email: \"\",\n      code: \"\",\n      phone: \"\",\n      image: \"\",\n      role: \"\",\n      type: \"\",\n      committee: \"\",\n    },\n    committees: [] as string[],\n    isLoading: false,\n    isImageUploading: false,\n  };\n\n  _committeeService: CommitteeService;\n\n  constructor(props: Prop) {\n    super(props);\n    this._committeeService = new CommitteeService();\n  }\n\n  componentDidMount() {\n    let { itemToBeEdited } = this.props;\n\n    if (itemToBeEdited) {\n      itemToBeEdited.date = this.formatDate();\n      this.setState({ user: itemToBeEdited });\n    }\n\n    this._committeeService.list().then((response) => {\n      this.setState({\n        committees: this.generateArrayOfCommitteesNames(response),\n      });\n    });\n  }\n\n  setImageUpload = (status: boolean, imageUrl?: string) => {\n    this.setState({ isImageUploading: status });\n    if (imageUrl)\n      this.setState({\n        user: { ...this.state.user, image: imageUrl } as any,\n      });\n  };\n\n  formatDate = () => {\n    let currentDateTime = new Date();\n    let formattedDate =\n      currentDateTime.getFullYear() +\n      \"-\" +\n      (currentDateTime.getMonth() + 1) +\n      \"-\" +\n      currentDateTime.getDate();\n\n    return formattedDate;\n  };\n\n  handleChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    let { name, value } = e.currentTarget;\n\n    this.setState({\n      user: {\n        ...this.state.user,\n        [name]: value,\n      } as any,\n    });\n  };\n\n  handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    let { user } = this.state;\n\n    this.setState(\n      {\n        user: {\n          ...user,\n        } as any,\n      },\n      () => {\n        this.props.onSubmit(this.state.user, true).then(() => {\n          this.setState({ user: user });\n          this.resetObj(user);\n        });\n      }\n    );\n  };\n\n  resetObj(obj: any) {\n    for (let prop in obj) {\n      obj[prop] = \"\";\n    }\n  }\n\n  generateCode = (): void => {\n    let randomNumber = Math.floor(100000000 + Math.random() * 900000000);\n\n    this.setState({\n      user: {\n        ...this.state.user,\n        code: String(randomNumber),\n      } as any,\n    });\n  };\n\n  generateArrayOfCommitteesNames = (committeesArray: Committee[]): string[] => {\n    let committeesNames: string[] = [];\n    committeesArray.map(({ name }) => committeesNames.push(name));\n\n    return committeesNames;\n  };\n\n  render() {\n    let {\n      isModalOpened,\n      itemToBeEdited,\n      closeModal,\n      isSubmitting,\n    } = this.props;\n    let { user, isLoading, isImageUploading, committees } = this.state;\n\n    return (\n      <Modal\n        open={isModalOpened}\n        onClose={() => closeModal()}\n        center\n        styles={{\n          modal: {\n            animation: `${\n              isModalOpened ? \"customEnterAnimation\" : \"customLeaveAnimation\"\n            } 500ms`,\n          },\n        }}\n      >\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <>\n            <h3 className=\"mb-3\"> Member </h3>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"row\">\n                <div className=\"form-group col-md-6\">\n                  <FormInput\n                    type=\"text\"\n                    required={true}\n                    placeholder=\"Member name\"\n                    label=\"Name\"\n                    id=\"name\"\n                    name=\"name\"\n                    errorPosition=\"bottom\"\n                    value={user.name}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div className=\"form-group col-md-6\">\n                  <FormInput\n                    type=\"select\"\n                    className=\"form-control\"\n                    options={[\"Admin\", \"Board\", \"Member\"]}\n                    required={true}\n                    label=\"Type\"\n                    id=\"type\"\n                    name=\"type\"\n                    errorPosition=\"bottom\"\n                    value={user.type}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"form-group col-md-6\">\n                  <FormInput\n                    type=\"tel\"\n                    className=\"form-control\"\n                    required={true}\n                    label=\"Phone\"\n                    id=\"phone\"\n                    placeholder=\"e.g: 010123456734\"\n                    name=\"phone\"\n                    errorPosition=\"bottom\"\n                    value={user.phone}\n                    onChange={this.handleChange}\n                  />\n                </div>\n\n                <div className=\"form-group col-md-6\">\n                  <FormInput\n                    type=\"select\"\n                    className=\"form-control\"\n                    options={[\"Member\", \"Head\", \"Officer\", \"Vice head\"]}\n                    required={true}\n                    label=\"Role\"\n                    id=\"role\"\n                    name=\"role\"\n                    errorPosition=\"bottom\"\n                    value={user.role}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"form-group col-md-6\">\n                  <FormInput\n                    type=\"email\"\n                    className=\"form-control\"\n                    required={true}\n                    label=\"Email\"\n                    id=\"email\"\n                    name=\"email\"\n                    errorPosition=\"bottom\"\n                    value={user.email}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div className=\"form-group col-md-6\">\n                  <FormInput\n                    type=\"select\"\n                    className=\"form-control\"\n                    options={\n                      committees && committees.length > 0 ? committees : []\n                    }\n                    required={true}\n                    label=\"Committee\"\n                    id=\"committee\"\n                    name=\"committee\"\n                    errorPosition=\"bottom\"\n                    value={user.committee}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"form-group col-md-10\">\n                  <FormInput\n                    type=\"text\"\n                    required={true}\n                    placeholder=\"User Code\"\n                    label=\"Code\"\n                    id=\"code\"\n                    name=\"code\"\n                    errorPosition=\"bottom\"\n                    value={user.code}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div className=\"col-md-2 d-flex align-items-center\">\n                  <button\n                    onClick={this.generateCode}\n                    type=\"button\"\n                    title=\"Generate Code\"\n                    className=\"btn mt-2\"\n                  >\n                    <FontAwesomeIcon icon={faCog} />\n                  </button>\n                </div>\n              </div>\n\n              <ImageInput\n                imgUrl={user.image}\n                name=\"image\"\n                setImageUpload={this.setImageUpload}\n              />\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={isSubmitting || isImageUploading}\n              >\n                {isImageUploading\n                  ? \"Uploading...\"\n                  : isSubmitting\n                  ? \"Loading ...\"\n                  : itemToBeEdited\n                  ? \"Save\"\n                  : \"Create\"}\n              </button>\n            </form>\n          </>\n        )}\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport AdminLayout from \"shared/admin-layout\";\nimport AdminTable from \"shared/admin-table\";\nimport Loading from \"shared/loading\";\nimport UserForm from \"../userForm\";\n\nimport UserService from \"modules/users/services/user.service\";\nimport { User } from \"configurations/interfaces/user.interface\";\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Prop {\n  history: {\n    push: (path: string) => void;\n  };\n}\n\ninterface State {\n  users: User[];\n  userToBeEdited?: User | null;\n  successAlert: string;\n  errorAlert: string;\n  isLoading: boolean;\n  isCreateModalOpened: boolean;\n  isSubmitting: boolean;\n  idOfItemToBeDeleted: string;\n}\n\nexport default class UsersListPage extends Component<Prop, State> {\n  tableConfig = {\n    tableHeaders: [\n      { name: \"name\", href: \"/users\", params: \"_id\" },\n      \"email\",\n      \"committee\",\n    ],\n    className: \"table-striped\",\n    actions: [\"edit\", \"delete\"],\n  };\n\n  state = {\n    users: [] as User[],\n    successAlert: \"\",\n    errorAlert: \"\",\n    userToBeEdited: {} as User,\n    isLoading: false,\n    isCreateModalOpened: false,\n    isSubmitting: false,\n    idOfItemToBeDeleted: \"\",\n  };\n\n  public _userService: UserService;\n  constructor(props: Prop) {\n    super(props);\n    this._userService = new UserService();\n  }\n\n  async componentDidMount() {\n    if (!this._userService.isUserLoggedIn())\n      return this.props.history.push(\"/login\");\n\n    this.setState({ isLoading: true });\n    try {\n      let users = await this._userService.list();\n\n      this.setState({ users, isLoading: false });\n    } catch {\n      this.setState({ errorAlert: \"Error retrieving items\", isLoading: false });\n    }\n  }\n\n  createUser = (user: User) => {\n    let { users } = this.state;\n\n    this.setState({\n      isSubmitting: true,\n    });\n\n    return this._userService\n      .create(user)\n      .then((response) => {\n        users.unshift(response as never);\n\n        this.setState({\n          users,\n          successAlert: \"User added successfully\",\n          errorAlert: \"\",\n          isCreateModalOpened: false,\n          isSubmitting: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          errorAlert: err.response.data.msg,\n          successAlert: \"\",\n          isSubmitting: false,\n        });\n      });\n  };\n\n  editUser = (\n    user: User,\n    submit: boolean,\n    id = this.state.userToBeEdited._id\n  ) => {\n    if (submit) {\n      this.setState({\n        isSubmitting: true,\n      });\n      return this._userService\n        .update(id, user)\n        .then((response) => {\n          this.updateStateWithNewUser(response);\n          this.setState({\n            isSubmitting: false,\n            successAlert: \"User updated successfully\",\n            errorAlert: \"\",\n            userToBeEdited: {} as User,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            errorAlert: err.response.data.msg,\n          });\n        });\n    } else {\n      this.setState({\n        isSubmitting: false,\n        userToBeEdited: user,\n      });\n    }\n  };\n\n  updateStateWithNewUser = (user: User) => {\n    let { users } = this.state;\n    let objectToUpdateIndex: number = users.findIndex(\n      (item: User) => item._id === user._id\n    );\n\n    users.splice(objectToUpdateIndex, 1, user as never);\n\n    this.setState({ users });\n  };\n\n  removeUser = (id: string, submit?: boolean) => {\n    let { users } = this.state;\n\n    if (submit) {\n      this._userService.delete(id).then(() => {\n        this.setState({\n          users: users.filter((item: User) => item._id !== id),\n        });\n      });\n    } else {\n      this.setState({\n        idOfItemToBeDeleted: id,\n      });\n    }\n  };\n\n  render() {\n    let {\n      users,\n      successAlert,\n      errorAlert,\n      userToBeEdited,\n      idOfItemToBeDeleted,\n      isLoading,\n      isCreateModalOpened,\n      isSubmitting,\n    } = this.state;\n\n    return (\n      <AdminLayout>\n        <header className=\"d-flex justify-content-between container mt-5\">\n          <h2> Users </h2>\n          <button\n            className=\"btn btn-success\"\n            onClick={() => this.setState({ isCreateModalOpened: true })}\n          >\n            <FontAwesomeIcon icon={faPlus} /> Create New User\n          </button>\n        </header>\n        {isLoading ? (\n          <div className=\"text-center mt-5\">\n            <Loading />\n          </div>\n        ) : users.length > 0 ? (\n          <div className=\"container mt-5\">\n            <AdminTable\n              config={this.tableConfig}\n              triggerEditEvent={this.editUser}\n              deleteRow={this.removeUser}\n              tableBody={users as any}\n            />\n          </div>\n        ) : (\n          <div className=\"text-center my-5\">\n            <p>No users yet</p>\n          </div>\n        )}\n\n        {Object.keys(userToBeEdited).length > 1 && (\n          <UserForm\n            isModalOpened={Object.keys(userToBeEdited).length > 1}\n            itemToBeEdited={userToBeEdited}\n            onSubmit={this.editUser}\n            isSubmitting={isSubmitting}\n            closeModal={() => this.setState({ userToBeEdited: {} as User })}\n          />\n        )}\n\n        <UserForm\n          isModalOpened={isCreateModalOpened}\n          isSubmitting={isSubmitting}\n          onSubmit={this.createUser}\n          closeModal={() => this.setState({ isCreateModalOpened: false })}\n        />\n\n        <SweetAlert\n          show={!!successAlert}\n          success\n          title={successAlert || \" \"}\n          timeout={2000}\n          onConfirm={() => this.setState({ successAlert: null })}\n        />\n\n        <SweetAlert\n          show={!!errorAlert}\n          warning\n          title=\"An error occurred\"\n          timeout={2000}\n          onConfirm={() => this.setState({ errorAlert: null })}\n        >\n          {errorAlert}\n        </SweetAlert>\n\n        <SweetAlert\n          warning\n          showCancel\n          confirmBtnText=\"Yes, delete it!\"\n          confirmBtnBsStyle=\"danger\"\n          title=\"Are you sure?\"\n          onConfirm={() => {\n            this.removeUser(idOfItemToBeDeleted, true);\n            this.setState({ idOfItemToBeDeleted: \"\" });\n          }}\n          onCancel={() => this.setState({ idOfItemToBeDeleted: \"\" })}\n          focusCancelBtn\n          show={!!idOfItemToBeDeleted}\n        >\n          You will not be able to recover this item !\n        </SweetAlert>\n      </AdminLayout>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\n\nimport { Announcement } from \"configurations/interfaces/announcement.interface\";\nimport Loading from \"shared/loading\";\nimport FormInput from \"shared/Input\";\nimport ImageInput from \"shared/image-input\";\n\ninterface Prop {\n  isModalOpened: boolean;\n  onSubmit: (item: any, submit: boolean, id?: string) => Promise<void>;\n  closeModal: () => void;\n  itemToBeEdited?: any;\n  isSubmitting?: boolean;\n}\n\ninterface State {\n  announcement: Announcement;\n  isLoading: boolean;\n  isImageUploading: boolean;\n}\n\nexport default class AnnouncementForm extends Component<Prop, State> {\n  state = {\n    announcement: {\n      title: \"\",\n      body: \"\",\n      cover: \"\",\n      type: \"\",\n    },\n    isLoading: false,\n    isImageUploading: false,\n  };\n\n  componentDidMount() {\n    let { itemToBeEdited } = this.props;\n\n    if (itemToBeEdited) {\n      itemToBeEdited.date = this.formatDate();\n      this.setState({ announcement: itemToBeEdited });\n    }\n  }\n\n  setImageUpload = (status: boolean, imageUrl?: string) => {\n    this.setState({ isImageUploading: status });\n    if (imageUrl)\n      this.setState({\n        announcement: { ...this.state.announcement, cover: imageUrl } as any,\n      });\n  };\n\n  formatDate = () => {\n    let currentDateTime = new Date();\n    let formattedDate =\n      currentDateTime.getFullYear() +\n      \"-\" +\n      (currentDateTime.getMonth() + 1) +\n      \"-\" +\n      currentDateTime.getDate();\n\n    return formattedDate;\n  };\n\n  handleChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    let { name, value } = e.currentTarget;\n\n    this.setState({\n      announcement: {\n        ...this.state.announcement,\n        [name]: value,\n      } as any,\n    });\n  };\n\n  handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    let { announcement } = this.state;\n\n    this.setState(\n      {\n        announcement: {\n          ...announcement,\n          date: this.formatDate(),\n        } as any,\n      },\n      () => {\n        this.props.onSubmit(this.state.announcement, true).then(() => {\n          this.setState({ announcement: announcement });\n          this.resetObj(announcement);\n        });\n      }\n    );\n  };\n\n  resetObj(obj: any) {\n    for (let prop in obj) {\n      obj[prop] = \"\";\n    }\n  }\n\n  render() {\n    let {\n      isModalOpened,\n      itemToBeEdited,\n      closeModal,\n      isSubmitting,\n    } = this.props;\n    let { announcement, isLoading, isImageUploading } = this.state;\n\n    return (\n      <Modal\n        open={isModalOpened}\n        onClose={() => closeModal()}\n        center\n        styles={{\n          modal: {\n            animation: `${\n              isModalOpened ? \"customEnterAnimation\" : \"customLeaveAnimation\"\n            } 500ms`,\n          },\n        }}\n      >\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <>\n            <h3 className=\"mb-3\"> Announcement </h3>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"row\">\n                <div className=\"form-group col-md-6\">\n                  <FormInput\n                    type=\"text\"\n                    required={true}\n                    placeholder=\"blog title\"\n                    label=\"Title\"\n                    id=\"title\"\n                    name=\"title\"\n                    errorPosition=\"bottom\"\n                    value={announcement.title}\n                    onChange={this.handleChange}\n                  />\n                </div>\n                <div className=\"form-group col-md-6\">\n                  <FormInput\n                    type=\"select\"\n                    className=\"form-control\"\n                    options={[\"General\", \"Technical\", \"Operation\"]}\n                    required={true}\n                    label=\"Type\"\n                    id=\"type\"\n                    name=\"type\"\n                    errorPosition=\"bottom\"\n                    value={announcement.type}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <div className=\"form-group col-12\">\n                  <FormInput\n                    type=\"textarea\"\n                    required={true}\n                    label=\"body\"\n                    id=\"body\"\n                    name=\"body\"\n                    rows=\"5\"\n                    errorPosition=\"bottom\"\n                    value={announcement.body}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <ImageInput\n                imgUrl={announcement.cover}\n                setImageUpload={this.setImageUpload}\n              />\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={isSubmitting || isImageUploading}\n              >\n                {isImageUploading\n                  ? \"Uploading...\"\n                  : isSubmitting\n                  ? \"Loading ...\"\n                  : itemToBeEdited\n                  ? \"Save\"\n                  : \"Create\"}\n              </button>\n            </form>\n          </>\n        )}\n      </Modal>\n    );\n  }\n}\n","import CrudService from \"configurations/crud.service\";\n\nexport default class AnnouncementService extends CrudService {\n  constructor() {\n    super();\n    this.initialize(\"/announcements\");\n  }\n}\n","import React, { Component } from \"react\";\n\nimport AdminLayout from \"shared/admin-layout\";\nimport AdminTable from \"shared/admin-table\";\nimport Loading from \"shared/loading\";\nimport AnnouncementForm from \"../form\";\n\nimport UserService from \"modules/users/services/user.service\";\nimport AnnouncementService from \"modules/announcements/services/announcement.service\";\nimport { Announcement } from \"configurations/interfaces/announcement.interface\";\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Prop {\n  history: {\n    push: (path: string) => void;\n  };\n}\n\ninterface State {\n  announcements: Announcement[];\n  announcementToBeEdited?: Announcement | null;\n  successAlert: string;\n  errorAlert: string;\n  isLoading: boolean;\n  isCreateModalOpened: boolean;\n  isSubmitting: boolean;\n  idOfItemToBeDeleted: string;\n}\n\nexport default class AnnouncementsListPage extends Component<Prop, State> {\n  tableConfig = {\n    tableHeaders: [\"title\", \"type\"],\n    className: \"table-striped\",\n    actions: [\"edit\", \"delete\"],\n  };\n\n  state = {\n    announcements: [] as Announcement[],\n    successAlert: \"\",\n    errorAlert: \"\",\n    announcementToBeEdited: {} as Announcement,\n    isLoading: false,\n    isCreateModalOpened: false,\n    isSubmitting: false,\n    idOfItemToBeDeleted: \"\",\n  };\n\n  public _announcementService: AnnouncementService;\n  public _userService: UserService;\n\n  constructor(props: Prop) {\n    super(props);\n    this._announcementService = new AnnouncementService();\n    this._userService = new UserService();\n  }\n\n  async componentDidMount() {\n    if (!this._userService.isUserLoggedIn())\n      return this.props.history.push(\"/login\");\n    this.setState({ isLoading: true });\n    try {\n      let announcements = await this._announcementService.list();\n\n      this.setState({ announcements, isLoading: false });\n    } catch {\n      this.setState({ errorAlert: \"Error retrieving items\", isLoading: false });\n    }\n  }\n\n  createAnnouncement = (announcement: Announcement) => {\n    let { announcements } = this.state;\n\n    this.setState({\n      isSubmitting: true,\n    });\n\n    return this._announcementService\n      .create(announcement)\n      .then((response) => {\n        announcements.unshift(response as never);\n\n        this.setState({\n          announcements,\n          successAlert: \"Announcement added successfully\",\n          errorAlert: \"\",\n          isCreateModalOpened: false,\n          isSubmitting: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          errorAlert: \"An error occurred\",\n          successAlert: \"\",\n          isSubmitting: false,\n        });\n      });\n  };\n\n  editAnnouncement = (\n    announcement: Announcement,\n    submit: boolean,\n    id = this.state.announcementToBeEdited._id\n  ) => {\n    if (submit) {\n      this.setState({\n        isSubmitting: true,\n      });\n      return this._announcementService\n        .update(id, announcement)\n        .then((response) => {\n          this.updateStateWithNewAnnouncement(response);\n          this.setState({\n            isSubmitting: false,\n            successAlert: \"Announcement updated successfully\",\n            errorAlert: \"\",\n            announcementToBeEdited: {} as Announcement,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            errorAlert: err.response.data.msg,\n          });\n        });\n    } else {\n      this.setState({\n        isSubmitting: false,\n        announcementToBeEdited: announcement,\n      });\n    }\n  };\n\n  updateStateWithNewAnnouncement = (announcement: Announcement) => {\n    let { announcements } = this.state;\n    let objectToUpdateIndex: number = announcements.findIndex(\n      (item: Announcement) => item._id === announcement._id\n    );\n\n    announcements.splice(objectToUpdateIndex, 1, announcement as never);\n\n    this.setState({ announcements });\n  };\n\n  removeAnnouncement = (id: string, submit?: boolean) => {\n    let { announcements } = this.state;\n\n    if (submit) {\n      this._announcementService.delete(id).then(() => {\n        this.setState({\n          announcements: announcements.filter(\n            (item: Announcement) => item._id !== id\n          ),\n        });\n      });\n    } else {\n      this.setState({\n        idOfItemToBeDeleted: id,\n      });\n    }\n  };\n\n  render() {\n    let {\n      announcements,\n      successAlert,\n      errorAlert,\n      announcementToBeEdited,\n      idOfItemToBeDeleted,\n      isLoading,\n      isCreateModalOpened,\n      isSubmitting,\n    } = this.state;\n\n    return (\n      <AdminLayout>\n        <header className=\"d-flex justify-content-between container mt-5\">\n          <h2> Announcements </h2>\n          <button\n            className=\"btn btn-success\"\n            onClick={() => this.setState({ isCreateModalOpened: true })}\n          >\n            <FontAwesomeIcon icon={faPlus} /> Create New Announcement\n          </button>\n        </header>\n        {isLoading ? (\n          <div className=\"text-center mt-5\">\n            <Loading />\n          </div>\n        ) : announcements.length > 0 ? (\n          <div className=\"container mt-5\">\n            <AdminTable\n              config={this.tableConfig}\n              triggerEditEvent={this.editAnnouncement}\n              deleteRow={this.removeAnnouncement}\n              tableBody={announcements as any}\n            />\n          </div>\n        ) : (\n          <div className=\"text-center my-5\">\n            <p>No Announcements yet</p>\n          </div>\n        )}\n\n        {Object.keys(announcementToBeEdited).length > 1 && (\n          <AnnouncementForm\n            isModalOpened={Object.keys(announcementToBeEdited).length > 1}\n            itemToBeEdited={announcementToBeEdited}\n            onSubmit={this.editAnnouncement}\n            isSubmitting={isSubmitting}\n            closeModal={() =>\n              this.setState({ announcementToBeEdited: {} as Announcement })\n            }\n          />\n        )}\n\n        <AnnouncementForm\n          isModalOpened={isCreateModalOpened}\n          isSubmitting={isSubmitting}\n          onSubmit={this.createAnnouncement}\n          closeModal={() => this.setState({ isCreateModalOpened: false })}\n        />\n\n        <SweetAlert\n          show={!!successAlert}\n          success\n          title={successAlert || \" \"}\n          timeout={2000}\n          onConfirm={() => this.setState({ successAlert: null })}\n        />\n\n        <SweetAlert\n          show={!!errorAlert}\n          warning\n          title=\"An error occurred\"\n          timeout={2000}\n          onConfirm={() => this.setState({ errorAlert: null })}\n        >\n          {errorAlert}\n        </SweetAlert>\n\n        <SweetAlert\n          warning\n          showCancel\n          confirmBtnText=\"Yes, delete it!\"\n          confirmBtnBsStyle=\"danger\"\n          title=\"Are you sure?\"\n          onConfirm={() => {\n            this.removeAnnouncement(idOfItemToBeDeleted, true);\n            this.setState({ idOfItemToBeDeleted: \"\" });\n          }}\n          onCancel={() => this.setState({ idOfItemToBeDeleted: \"\" })}\n          focusCancelBtn\n          show={!!idOfItemToBeDeleted}\n        >\n          You will not be able to recover this item !\n        </SweetAlert>\n      </AdminLayout>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"react-responsive-modal/styles.css\";\nimport { Modal } from \"react-responsive-modal\";\n\nimport { Committee } from \"configurations/interfaces/committee.interface\";\nimport Loading from \"shared/loading\";\nimport FormInput from \"shared/Input\";\n\ninterface Prop {\n  isModalOpened: boolean;\n  onSubmit: (item: any, submit: boolean, id?: string) => Promise<void>;\n  closeModal: () => void;\n  itemToBeEdited?: any;\n  isSubmitting?: boolean;\n}\n\ninterface State {\n  committee: Committee;\n  isLoading: boolean;\n}\n\nexport default class CommitteeForm extends Component<Prop, State> {\n  state = {\n    committee: {\n      name: \"\",\n    },\n    isLoading: false,\n  };\n\n  componentDidMount() {\n    let { itemToBeEdited } = this.props;\n\n    if (itemToBeEdited) {\n      itemToBeEdited.date = this.formatDate();\n      this.setState({ committee: itemToBeEdited });\n    }\n  }\n\n  formatDate = () => {\n    let currentDateTime = new Date();\n    let formattedDate =\n      currentDateTime.getFullYear() +\n      \"-\" +\n      (currentDateTime.getMonth() + 1) +\n      \"-\" +\n      currentDateTime.getDate();\n\n    return formattedDate;\n  };\n\n  handleChange = (e: React.FormEvent<HTMLInputElement>): void => {\n    let { name, value } = e.currentTarget;\n\n    this.setState({\n      committee: {\n        ...this.state.committee,\n        [name]: value,\n      } as any,\n    });\n  };\n\n  handleSubmit = (e: React.SyntheticEvent) => {\n    e.preventDefault();\n\n    let { committee } = this.state;\n    this.props.onSubmit(committee, true).then(() => {\n      this.resetObj(committee);\n      this.setState({ committee: committee });\n    });\n  };\n\n  resetObj(obj: any) {\n    for (let prop in obj) {\n      obj[prop] = \"\";\n    }\n  }\n\n  render() {\n    let {\n      isModalOpened,\n      itemToBeEdited,\n      closeModal,\n      isSubmitting,\n    } = this.props;\n    let { committee, isLoading } = this.state;\n\n    return (\n      <Modal\n        open={isModalOpened}\n        onClose={() => closeModal()}\n        center\n        styles={{\n          modal: {\n            animation: `${\n              isModalOpened ? \"customEnterAnimation\" : \"customLeaveAnimation\"\n            } 500ms`,\n          },\n        }}\n      >\n        {isLoading ? (\n          <Loading />\n        ) : (\n          <>\n            <h3 className=\"mb-3\"> Committee </h3>\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"row\">\n                <div className=\"form-group col-md-12\">\n                  <FormInput\n                    type=\"text\"\n                    required={true}\n                    placeholder=\"Committee name\"\n                    label=\"Name\"\n                    id=\"name\"\n                    name=\"name\"\n                    errorPosition=\"bottom\"\n                    value={committee.name}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary\"\n                disabled={isSubmitting}\n              >\n                {isSubmitting\n                  ? \"Loading ...\"\n                  : itemToBeEdited\n                  ? \"Save\"\n                  : \"Create\"}\n              </button>\n            </form>\n          </>\n        )}\n      </Modal>\n    );\n  }\n}\n","import AdminHome from \"modules/admin-home-page\";\nimport LoginPage from \"modules/users/components/loginPage\";\nimport UserProfile from \"modules/users/components/userProfile\";\nimport UsersListPage from \"modules/users/components/usersListPage\";\nimport AnnouncementsListPage from \"modules/announcements/components/page\";\nimport CommitteesListPage from \"modules/committees/components/committeesListPage\";\n\nimport { RouteStructure } from \"configurations/interfaces/route.interface\";\n\nexport let adminRoutes: RouteStructure[] = [\n  {\n    path: \"/\",\n    label: \"Home\",\n    component: AdminHome,\n  },\n  {\n    path: \"/login\",\n    component: LoginPage,\n  },\n  {\n    path: \"/users\",\n    label: \"Users\",\n    component: UsersListPage,\n  },\n  {\n    path: \"/users/:id\",\n    component: UserProfile,\n  },\n  {\n    path: \"/committees\",\n    label: \"Committees\",\n    component: CommitteesListPage,\n    adminOnly: true\n  },\n  {\n    path: \"/announcements\",\n    label: \"Announcements\",\n    component: AnnouncementsListPage,\n    adminOnly: true\n  },\n];\n","import React, { Component } from \"react\";\n\nimport AdminLayout from \"shared/admin-layout\";\nimport AdminTable from \"shared/admin-table\";\nimport Loading from \"shared/loading\";\nimport CommitteeForm from \"../committeeForm\";\n\nimport UserService from \"modules/users/services/user.service\";\nimport CommitteeService from \"modules/committees/services/committee.service\";\nimport { Committee } from \"configurations/interfaces/committee.interface\";\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Prop {\n  history: {\n    push: (path: string) => void;\n  };\n}\n\ninterface State {\n  committees: Committee[];\n  committeeToBeEdited?: Committee | null;\n  successAlert: string;\n  errorAlert: string;\n  isLoading: boolean;\n  isCreateModalOpened: boolean;\n  isSubmitting: boolean;\n  idOfItemToBeDeleted: string;\n}\n\nexport default class CommitteesListPage extends Component<Prop, State> {\n  tableConfig = {\n    tableHeaders: [\"name\"],\n    className: \"table-striped\",\n    actions: [\"edit\", \"delete\"],\n  };\n\n  state = {\n    committees: [] as Committee[],\n    successAlert: \"\",\n    errorAlert: \"\",\n    committeeToBeEdited: {} as Committee,\n    isLoading: false,\n    isCreateModalOpened: false,\n    isSubmitting: false,\n    idOfItemToBeDeleted: \"\",\n  };\n\n  public _committeeService: CommitteeService;\n  public _userService: UserService;\n\n  constructor(props: Prop) {\n    super(props);\n    this._committeeService = new CommitteeService();\n    this._userService = new UserService();\n  }\n\n  async componentDidMount() {\n    if (!this._userService.isUserLoggedIn())\n      return this.props.history.push(\"/login\");\n    this.setState({ isLoading: true });\n    try {\n      let committees = await this._committeeService.list();\n\n      this.setState({ committees, isLoading: false });\n    } catch {\n      this.setState({ errorAlert: \"Error retrieving items\", isLoading: false });\n    }\n  }\n\n  createCommittee = (committee: Committee) => {\n    let { committees } = this.state;\n\n    this.setState({\n      isSubmitting: true,\n    });\n\n    return this._committeeService\n      .create(committee)\n      .then((response) => {\n        committees.unshift(response as never);\n\n        this.setState({\n          committees,\n          successAlert: \"Committee added successfully\",\n          errorAlert: \"\",\n          isCreateModalOpened: false,\n          isSubmitting: false,\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          errorAlert: \"An error occurred\",\n          successAlert: \"\",\n          isSubmitting: false,\n        });\n      });\n  };\n\n  editCommittee = (\n    committee: Committee,\n    submit: boolean,\n    id = this.state.committeeToBeEdited._id\n  ) => {\n    if (submit) {\n      this.setState({\n        isSubmitting: true,\n      });\n      return this._committeeService\n        .update(id, committee)\n        .then((response) => {\n          this.updateStateWithNewCommittee(response);\n          this.setState({\n            isSubmitting: false,\n            successAlert: \"Committee updated successfully\",\n            errorAlert: \"\",\n            committeeToBeEdited: {} as Committee,\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            errorAlert: err.response.data.msg,\n          });\n        });\n    } else {\n      this.setState({\n        isSubmitting: false,\n        committeeToBeEdited: committee,\n      });\n    }\n  };\n\n  updateStateWithNewCommittee = (committee: Committee) => {\n    let { committees } = this.state;\n    let objectToUpdateIndex: number = committees.findIndex(\n      (item: Committee) => item._id === committee._id\n    );\n\n    committees.splice(objectToUpdateIndex, 1, committee as never);\n\n    this.setState({ committees });\n  };\n\n  removeCommittee = (id: string, submit?: boolean) => {\n    let { committees } = this.state;\n\n    if (submit) {\n      this._committeeService\n        .delete(id)\n        .then(() => {\n          this.setState({\n            committees: committees.filter((item: Committee) => item._id !== id),\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            errorAlert: err.response.data.msg,\n          });\n        });\n    } else {\n      this.setState({\n        idOfItemToBeDeleted: id,\n      });\n    }\n  };\n\n  render() {\n    let {\n      committees,\n      successAlert,\n      errorAlert,\n      committeeToBeEdited,\n      idOfItemToBeDeleted,\n      isLoading,\n      isCreateModalOpened,\n      isSubmitting,\n    } = this.state;\n\n    return (\n      <AdminLayout>\n        <header className=\"d-flex justify-content-between container mt-5\">\n          <h2> Committees </h2>\n          <button\n            className=\"btn btn-success\"\n            onClick={() => this.setState({ isCreateModalOpened: true })}\n          >\n            <FontAwesomeIcon icon={faPlus} /> Create New Committee\n          </button>\n        </header>\n        {isLoading ? (\n          <div className=\"text-center mt-5\">\n            <Loading />\n          </div>\n        ) : committees.length > 0 ? (\n          <div className=\"container mt-5\">\n            <AdminTable\n              config={this.tableConfig}\n              triggerEditEvent={this.editCommittee}\n              deleteRow={this.removeCommittee}\n              tableBody={committees as any}\n            />\n          </div>\n        ) : (\n          <div className=\"text-center my-5\">\n            <p>No committees yet</p>\n          </div>\n        )}\n\n        {Object.keys(committeeToBeEdited).length > 1 && (\n          <CommitteeForm\n            isModalOpened={Object.keys(committeeToBeEdited).length > 1}\n            itemToBeEdited={committeeToBeEdited}\n            onSubmit={this.editCommittee}\n            isSubmitting={isSubmitting}\n            closeModal={() =>\n              this.setState({ committeeToBeEdited: {} as Committee })\n            }\n          />\n        )}\n\n        <CommitteeForm\n          isModalOpened={isCreateModalOpened}\n          isSubmitting={isSubmitting}\n          onSubmit={this.createCommittee}\n          closeModal={() => this.setState({ isCreateModalOpened: false })}\n        />\n\n        <SweetAlert\n          show={!!successAlert}\n          success\n          title={successAlert || \" \"}\n          timeout={2000}\n          onConfirm={() => this.setState({ successAlert: null })}\n        />\n\n        <SweetAlert\n          show={!!errorAlert}\n          warning\n          title=\"An error occurred\"\n          timeout={2000}\n          onConfirm={() => this.setState({ errorAlert: null })}\n        >\n          {errorAlert}\n        </SweetAlert>\n\n        <SweetAlert\n          warning\n          showCancel\n          confirmBtnText=\"Yes, delete it!\"\n          confirmBtnBsStyle=\"danger\"\n          title=\"Are you sure?\"\n          onConfirm={() => {\n            this.removeCommittee(idOfItemToBeDeleted, true);\n            this.setState({ idOfItemToBeDeleted: \"\" });\n          }}\n          onCancel={() => this.setState({ idOfItemToBeDeleted: \"\" })}\n          focusCancelBtn\n          show={!!idOfItemToBeDeleted}\n        >\n          You will not be able to recover this item !\n        </SweetAlert>\n      </AdminLayout>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  RouteProps,\n} from \"react-router-dom\";\n\nimport { adminRoutes } from \"configurations/admin-routes\";\nimport { RouteStructure } from \"configurations/interfaces/route.interface\";\n\nimport \"./App.css\";\n\nexport default class App extends Component<RouteProps> {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          {adminRoutes.map((adRoute: RouteStructure, index: number) => {\n            return (\n              <Route\n                key={`adRoute${index}`}\n                exact\n                path={adRoute.path}\n                component={adRoute.component as any}\n              />\n            );\n          })}\n        </Switch>\n      </Router>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}